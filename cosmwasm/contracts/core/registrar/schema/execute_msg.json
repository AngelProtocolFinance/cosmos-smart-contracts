{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "vault_add"
      ],
      "properties": {
        "vault_add": {
          "$ref": "#/definitions/VaultAddMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "vault_remove"
      ],
      "properties": {
        "vault_remove": {
          "type": "object",
          "required": [
            "vault_addr"
          ],
          "properties": {
            "vault_addr": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "vault_update"
      ],
      "properties": {
        "vault_update": {
          "type": "object",
          "required": [
            "approved",
            "restricted_from",
            "vault_addr"
          ],
          "properties": {
            "approved": {
              "type": "boolean"
            },
            "restricted_from": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EndowmentType"
              }
            },
            "vault_addr": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "$ref": "#/definitions/UpdateConfigMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_owner"
      ],
      "properties": {
        "update_owner": {
          "type": "object",
          "required": [
            "new_owner"
          ],
          "properties": {
            "new_owner": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_endow_type_fees"
      ],
      "properties": {
        "update_endow_type_fees": {
          "$ref": "#/definitions/UpdateEndowTypeFeesMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_network_connections"
      ],
      "properties": {
        "update_network_connections": {
          "type": "object",
          "required": [
            "action",
            "network_info"
          ],
          "properties": {
            "action": {
              "type": "string"
            },
            "network_info": {
              "$ref": "#/definitions/NetworkInfo"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "AcceptedTokens": {
      "type": "object",
      "required": [
        "cw20",
        "native"
      ],
      "properties": {
        "cw20": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "native": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AccountType": {
      "type": "string",
      "enum": [
        "locked",
        "liquid"
      ]
    },
    "Addr": {
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    },
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "EndowmentType": {
      "type": "string",
      "enum": [
        "Charity",
        "Normal"
      ]
    },
    "NetworkInfo": {
      "type": "object",
      "required": [
        "chain_id",
        "name"
      ],
      "properties": {
        "chain_id": {
          "type": "string"
        },
        "gas_limit": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "ibc_channel": {
          "type": [
            "string",
            "null"
          ]
        },
        "ibc_host_contract": {
          "anyOf": [
            {
              "$ref": "#/definitions/Addr"
            },
            {
              "type": "null"
            }
          ]
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RebalanceDetails": {
      "type": "object",
      "required": [
        "interest_distribution",
        "locked_interests_to_liquid",
        "locked_principle_to_liquid",
        "principle_distribution",
        "rebalance_liquid_invested_profits"
      ],
      "properties": {
        "interest_distribution": {
          "$ref": "#/definitions/Decimal"
        },
        "locked_interests_to_liquid": {
          "type": "boolean"
        },
        "locked_principle_to_liquid": {
          "type": "boolean"
        },
        "principle_distribution": {
          "$ref": "#/definitions/Decimal"
        },
        "rebalance_liquid_invested_profits": {
          "type": "boolean"
        }
      }
    },
    "UpdateConfigMsg": {
      "type": "object",
      "properties": {
        "accepted_tokens": {
          "anyOf": [
            {
              "$ref": "#/definitions/AcceptedTokens"
            },
            {
              "type": "null"
            }
          ]
        },
        "accepted_tokens_cw20": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "accepted_tokens_native": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "accounts_contract": {
          "type": [
            "string",
            "null"
          ]
        },
        "applications_review": {
          "type": [
            "string",
            "null"
          ]
        },
        "approved_charities": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "charity_shares_contract": {
          "type": [
            "string",
            "null"
          ]
        },
        "collector_addr": {
          "type": [
            "string",
            "null"
          ]
        },
        "collector_share": {
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal"
            },
            {
              "type": "null"
            }
          ]
        },
        "cw3_code": {
          "description": "WASM CODES",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "cw4_code": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "donation_match_charites_contract": {
          "type": [
            "string",
            "null"
          ]
        },
        "donation_match_code": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "fundraising_contract": {
          "type": [
            "string",
            "null"
          ]
        },
        "gov_contract": {
          "type": [
            "string",
            "null"
          ]
        },
        "halo_token": {
          "type": [
            "string",
            "null"
          ]
        },
        "halo_token_lp_contract": {
          "type": [
            "string",
            "null"
          ]
        },
        "index_fund_contract": {
          "description": "CONTRACT ADDRESSES",
          "type": [
            "string",
            "null"
          ]
        },
        "rebalance": {
          "anyOf": [
            {
              "$ref": "#/definitions/RebalanceDetails"
            },
            {
              "type": "null"
            }
          ]
        },
        "split_default": {
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal"
            },
            {
              "type": "null"
            }
          ]
        },
        "split_max": {
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal"
            },
            {
              "type": "null"
            }
          ]
        },
        "split_min": {
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal"
            },
            {
              "type": "null"
            }
          ]
        },
        "subdao_bonding_token_code": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "subdao_cw20_token_code": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "subdao_cw900_code": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "subdao_distributor_code": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "subdao_gov_code": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "swap_factory": {
          "type": [
            "string",
            "null"
          ]
        },
        "swaps_router": {
          "type": [
            "string",
            "null"
          ]
        },
        "tax_rate": {
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal"
            },
            {
              "type": "null"
            }
          ]
        },
        "treasury": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "UpdateEndowTypeFeesMsg": {
      "type": "object",
      "properties": {
        "endowtype_charity": {
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal"
            },
            {
              "type": "null"
            }
          ]
        },
        "endowtype_normal": {
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "VaultAddMsg": {
      "type": "object",
      "required": [
        "acct_type",
        "input_denom",
        "restricted_from",
        "vault_addr",
        "vault_type",
        "yield_token"
      ],
      "properties": {
        "acct_type": {
          "$ref": "#/definitions/AccountType"
        },
        "input_denom": {
          "type": "string"
        },
        "network": {
          "type": [
            "string",
            "null"
          ]
        },
        "restricted_from": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndowmentType"
          }
        },
        "vault_addr": {
          "type": "string"
        },
        "vault_type": {
          "$ref": "#/definitions/VaultType"
        },
        "yield_token": {
          "type": "string"
        }
      }
    },
    "VaultType": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "native",
            "evm"
          ]
        },
        {
          "type": "object",
          "required": [
            "ibc"
          ],
          "properties": {
            "ibc": {
              "type": "object",
              "required": [
                "ica"
              ],
              "properties": {
                "ica": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}
