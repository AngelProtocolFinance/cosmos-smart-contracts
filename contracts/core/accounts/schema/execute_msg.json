{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "deposit"
      ],
      "properties": {
        "deposit": {
          "$ref": "#/definitions/DepositMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "withdraw"
      ],
      "properties": {
        "withdraw": {
          "$ref": "#/definitions/WithdrawMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "vault_receipt"
      ],
      "properties": {
        "vault_receipt": {
          "$ref": "#/definitions/AccountTransferMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "liquidate"
      ],
      "properties": {
        "liquidate": {
          "type": "object",
          "required": [
            "beneficiary"
          ],
          "properties": {
            "beneficiary": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "terminate_to_fund"
      ],
      "properties": {
        "terminate_to_fund": {
          "type": "object",
          "required": [
            "fund"
          ],
          "properties": {
            "fund": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "terminate_to_address"
      ],
      "properties": {
        "terminate_to_address": {
          "type": "object",
          "required": [
            "beneficiary"
          ],
          "properties": {
            "beneficiary": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_admin"
      ],
      "properties": {
        "update_admin": {
          "type": "object",
          "required": [
            "new_admin"
          ],
          "properties": {
            "new_admin": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_registrar"
      ],
      "properties": {
        "update_registrar": {
          "type": "object",
          "required": [
            "new_registrar"
          ],
          "properties": {
            "new_registrar": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_endowment_settings"
      ],
      "properties": {
        "update_endowment_settings": {
          "$ref": "#/definitions/UpdateEndowmentSettingsMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_endowment_status"
      ],
      "properties": {
        "update_endowment_status": {
          "$ref": "#/definitions/UpdateEndowmentStatusMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_strategies"
      ],
      "properties": {
        "update_strategies": {
          "$ref": "#/definitions/UpdateStrategiesMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "receive"
      ],
      "properties": {
        "receive": {
          "$ref": "#/definitions/Cw20ReceiveMsg"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "AccountTransferMsg": {
      "type": "object",
      "required": [
        "liquid",
        "locked"
      ],
      "properties": {
        "liquid": {
          "$ref": "#/definitions/Uint256"
        },
        "locked": {
          "$ref": "#/definitions/Uint256"
        }
      }
    },
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Cw20ReceiveMsg": {
      "description": "Cw20ReceiveMsg should be de/serialized under `Receive()` variant in a ExecuteMsg",
      "type": "object",
      "required": [
        "amount",
        "msg",
        "sender"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "msg": {
          "$ref": "#/definitions/Binary"
        },
        "sender": {
          "type": "string"
        }
      }
    },
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "DepositMsg": {
      "type": "object",
      "required": [
        "liquid_percentage",
        "locked_percentage"
      ],
      "properties": {
        "liquid_percentage": {
          "$ref": "#/definitions/Decimal"
        },
        "locked_percentage": {
          "$ref": "#/definitions/Decimal"
        }
      }
    },
    "FundingSource": {
      "type": "object",
      "required": [
        "liquid",
        "locked",
        "vault"
      ],
      "properties": {
        "liquid": {
          "$ref": "#/definitions/Uint128"
        },
        "locked": {
          "$ref": "#/definitions/Uint128"
        },
        "vault": {
          "type": "string"
        }
      }
    },
    "SplitDetails": {
      "type": "object",
      "required": [
        "default",
        "max",
        "min"
      ],
      "properties": {
        "default": {
          "$ref": "#/definitions/Decimal"
        },
        "max": {
          "$ref": "#/definitions/Decimal"
        },
        "min": {
          "$ref": "#/definitions/Decimal"
        }
      }
    },
    "StrategyComponentMsg": {
      "type": "object",
      "required": [
        "liquid_percentage",
        "locked_percentage",
        "vault"
      ],
      "properties": {
        "liquid_percentage": {
          "$ref": "#/definitions/Decimal"
        },
        "locked_percentage": {
          "$ref": "#/definitions/Decimal"
        },
        "vault": {
          "type": "string"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "Uint256": {
      "type": "string"
    },
    "UpdateEndowmentSettingsMsg": {
      "type": "object",
      "required": [
        "beneficiary",
        "owner",
        "split_to_liquid"
      ],
      "properties": {
        "beneficiary": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "split_to_liquid": {
          "$ref": "#/definitions/SplitDetails"
        }
      }
    },
    "UpdateEndowmentStatusMsg": {
      "type": "object",
      "required": [
        "deposit_approved",
        "withdraw_approved"
      ],
      "properties": {
        "deposit_approved": {
          "type": "boolean"
        },
        "withdraw_approved": {
          "type": "boolean"
        }
      }
    },
    "UpdateStrategiesMsg": {
      "type": "object",
      "required": [
        "strategies"
      ],
      "properties": {
        "strategies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StrategyComponentMsg"
          }
        }
      }
    },
    "WithdrawMsg": {
      "type": "object",
      "required": [
        "sources"
      ],
      "properties": {
        "sources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FundingSource"
          }
        }
      }
    }
  }
}
